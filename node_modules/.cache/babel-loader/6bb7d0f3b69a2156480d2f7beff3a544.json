{"ast":null,"code":"import Axios from 'axios';\nimport { GetAuthorByIdForBook } from './reduxAuthor.js';\nexport function ShowBooks() {\n  return async dispatch => {\n    var Token = localStorage.getItem('Token');\n    Axios.get('http://localhost:8080/books?page=0&size=5', {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(sendActionShowToRedux(responds.data));\n    });\n  };\n}\n_c = ShowBooks;\nexport function sendActionShowToRedux(listBook) {\n  return {\n    type: \"showBook\",\n    payload: listBook\n  };\n}\nexport function GetBookSize() {\n  var Token = localStorage.getItem('Token');\n  var index = 0;\n  var data = {};\n  var config = {\n    method: 'PUT',\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  };\n  Axios.put('http://localhost:8080/books', data, config).then(function (responds) {\n    localStorage.setItem('bookSize', responds.data.length);\n  });\n  index = localStorage.getItem('bookSize');\n  return index;\n}\n_c2 = GetBookSize;\nexport function ChangeListBookByPageIndex(id) {\n  var Token = localStorage.getItem('Token');\n  return async dispatch => {\n    Axios.get('http://localhost:8080/books?page=' + (id - 1) + '&size=5', {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(loadListBookByPageIndex(responds.data));\n    });\n  };\n}\n_c3 = ChangeListBookByPageIndex;\nexport function loadListBookByPageIndex(listUser) {\n  return {\n    type: 'changeListBookByIndex',\n    payload: listUser\n  };\n}\nexport function GetBookListFromDB() {\n  var Token = localStorage.getItem('Token');\n  var data = {};\n  var bookNameList = [];\n  var config = {\n    method: 'PUT',\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  };\n  Axios.put('http://localhost:8080/books', data, config).then(function (responds) {\n    for (var i = 0; i <= responds.data.length; i++) {\n      if (responds.data[i] != null) {\n        if (responds.data[i].statusBook == \"APPROVED\") bookNameList.push({\n          Country: responds.data[i].name,\n          id: responds.data.id\n        });\n      }\n    }\n\n    localStorage.setItem('booksNameList', JSON.stringify(bookNameList));\n  });\n  const jsonBookNameList = localStorage.getItem('booksNameList');\n  const getBookNameList = JSON.parse(jsonBookNameList);\n  return getBookNameList;\n}\n_c4 = GetBookListFromDB;\nexport function ChangeStatusBookByPageIndex(id, Token) {\n  //var Token = localStorage.getItem('Token');\n  Axios.post('http://localhost:8080/books/' + id, {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (responds) {\n    window.location = \"/book\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c5 = ChangeStatusBookByPageIndex;\nexport function DeleteFunction(id) {\n  var Token = localStorage.getItem('Token');\n  Axios.delete('http://localhost:8080/books/' + id, {\n    headers: {\n      \"Authorization\": Token\n    }\n  }).then(function (response) {\n    //alert(\"delete Working!\"); \n    window.location = \"/book\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c6 = DeleteFunction;\nexport function AddFunction(bookName, bookDescription, bookDetail, listCat, authorLabel, img) {\n  var Token = localStorage.getItem('Token');\n  var authorasd;\n\n  if (authorLabel.current.state.value != null) {\n    var authorId = authorLabel.current.state.value.id;\n    authorasd = GetAuthorByIdForBook(authorId);\n    console.log(authorasd);\n  }\n\n  if (img.current.files.length > 0) {\n    var image = img.current.files[0].name;\n  }\n\n  var data = {\n    name: bookName,\n    description: bookDescription,\n    detail: bookDetail,\n    categories: listCat,\n    authors: authorasd,\n    image: image\n  };\n  console.log(JSON.stringify(data));\n  Axios.post('http://localhost:8080/books', JSON.stringify(data), {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    alert(\"add Working!\");\n    window.location = \"/book\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c7 = AddFunction;\nexport function GetBookById(id) {\n  var Token = localStorage.getItem('Token');\n  return async dispatch => {\n    Axios.get('http://localhost:8080/books/' + id, {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(sendActionShowBookToRedux(responds.data));\n    });\n  };\n}\n_c8 = GetBookById;\nexport function sendActionShowBookToRedux(Author) {\n  return {\n    type: \"getObjBook\",\n    payload: Author\n  };\n}\nexport function UpdateBookFunction(bookId, bookName, bookDescription, bookDetail, listCat, authorLabel, img) {\n  var Token = localStorage.getItem('Token');\n  var authorasd;\n\n  if (authorLabel.current.state.value != null) {\n    var authorId = authorLabel.current.state.value.id;\n    authorasd = GetAuthorByIdForBook(authorId);\n  }\n\n  if (img.current.files.length > 0) {\n    var imageaaaa = img.current.files[0].name;\n  }\n\n  var data = {\n    name: bookName,\n    description: bookDescription,\n    detail: bookDetail,\n    categories: listCat,\n    author: authorasd,\n    image: imageaaaa\n  };\n  Axios.put('http://localhost:8080/books/' + bookId, JSON.stringify(data), {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    //alert(\"Update Working!\");\n    window.location = \"/book\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c9 = UpdateBookFunction;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"ShowBooks\");\n$RefreshReg$(_c2, \"GetBookSize\");\n$RefreshReg$(_c3, \"ChangeListBookByPageIndex\");\n$RefreshReg$(_c4, \"GetBookListFromDB\");\n$RefreshReg$(_c5, \"ChangeStatusBookByPageIndex\");\n$RefreshReg$(_c6, \"DeleteFunction\");\n$RefreshReg$(_c7, \"AddFunction\");\n$RefreshReg$(_c8, \"GetBookById\");\n$RefreshReg$(_c9, \"UpdateBookFunction\");","map":{"version":3,"sources":["/Users/macoc/Documents/FE_React/Book-Reviews-FrontEnd/src/redux/reduxBook.js"],"names":["Axios","GetAuthorByIdForBook","ShowBooks","dispatch","Token","localStorage","getItem","get","method","data","headers","then","responds","sendActionShowToRedux","listBook","type","payload","GetBookSize","index","config","put","setItem","length","ChangeListBookByPageIndex","id","loadListBookByPageIndex","listUser","GetBookListFromDB","bookNameList","i","statusBook","push","Country","name","JSON","stringify","jsonBookNameList","getBookNameList","parse","ChangeStatusBookByPageIndex","post","window","location","catch","error","console","log","DeleteFunction","delete","response","AddFunction","bookName","bookDescription","bookDetail","listCat","authorLabel","img","authorasd","current","state","value","authorId","files","image","description","detail","categories","authors","alert","GetBookById","sendActionShowBookToRedux","Author","UpdateBookFunction","bookId","imageaaaa","author"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {GetAuthorByIdForBook} from './reduxAuthor.js'\n\n\nexport function ShowBooks() {\n    return async(dispatch) => {\n        var Token = localStorage.getItem('Token');\n        Axios.get('http://localhost:8080/books?page=0&size=5',  {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(sendActionShowToRedux(responds.data));\n            })\n    }\n}\n\nexport function sendActionShowToRedux(listBook) {\n    return {\n        type: \"showBook\",\n        payload: listBook\n    }\n}\n\nexport function GetBookSize() {\n    var Token = localStorage.getItem('Token');\n    var index = 0;\n        var data = {};\n        var config = {\n            method: 'PUT',\n            headers: {\n            \"Authorization\": Token,\n            'Content-Type': 'application/json'\n            }\n        }\n        Axios.put('http://localhost:8080/books', data, config)\n        .then(function (responds) {\n            localStorage.setItem('bookSize', responds.data.length);\n        })  \n        \n    index = localStorage.getItem('bookSize');\n    return index;\n}\n\nexport function ChangeListBookByPageIndex(id) {\n    var Token = localStorage.getItem('Token');\n    return async(dispatch) => {\n        Axios.get('http://localhost:8080/books?page=' + (id-1)+ '&size=5', {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(loadListBookByPageIndex(responds.data));\n            })\n    }\n}\n\nexport function loadListBookByPageIndex(listUser) {\n    return {\n        type: 'changeListBookByIndex',\n        payload: listUser\n    }\n}\n\nexport function GetBookListFromDB() {\n    var Token = localStorage.getItem('Token');\n    var data = {};\n    var bookNameList = [];\n    var config = {\n        method: 'PUT',\n        headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n        }\n    }\n    Axios.put('http://localhost:8080/books', data, config)\n    .then(function (responds) {\n        for (var i = 0; i <= responds.data.length; i++) {\n            if (responds.data[i] != null) {\n                if (responds.data[i].statusBook == \"APPROVED\")\n                bookNameList.push({Country: responds.data[i].name, id: responds.data.id});\n            }\n        }\n        localStorage.setItem('booksNameList', JSON.stringify(bookNameList));\n    }) \n\n    const jsonBookNameList = localStorage.getItem('booksNameList');\n    const getBookNameList = JSON.parse(jsonBookNameList);\n    return getBookNameList;\n}\n\nexport function ChangeStatusBookByPageIndex(id, Token) {\n    //var Token = localStorage.getItem('Token');\n    Axios.post('http://localhost:8080/books/' + id,  {\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                window.location = \"/book\";\n            })  \n            .catch(function (error) {\n                console.log(error);\n              })\n}\n\nexport function DeleteFunction(id) {\n    var Token = localStorage.getItem('Token');\n    Axios.delete('http://localhost:8080/books/' + id, {\n      headers: {\n        \"Authorization\": Token,\n      },\n    })\n    .then(function (response) {\n      //alert(\"delete Working!\"); \n      window.location = \"/book\";\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n}\n\nexport function AddFunction(bookName, bookDescription, bookDetail, listCat, authorLabel, img) {\n    var Token = localStorage.getItem('Token');\n    var authorasd;\n\n    if (authorLabel.current.state.value != null) {\n        var authorId = authorLabel.current.state.value.id;\n        authorasd = GetAuthorByIdForBook(authorId);\n        console.log(authorasd);\n    }\n\n    if (img.current.files.length > 0) {\n        var image = img.current.files[0].name;\n    }\n    \n    var data = {name: bookName, description: bookDescription, detail : bookDetail, categories: listCat, authors: authorasd, image: image};\n    console.log(JSON.stringify(data));\n    Axios.post('http://localhost:8080/books', JSON.stringify(data),{\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      },\n      })\n      .then(function (response) {\n        alert(\"add Working!\");\n        window.location = \"/book\";\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n}\n\nexport function GetBookById(id) {\n    var Token = localStorage.getItem('Token');\n    return async(dispatch) => {\n        Axios.get('http://localhost:8080/books/' + id,  {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(sendActionShowBookToRedux(responds.data));\n            })\n    }\n}\n\nexport function sendActionShowBookToRedux(Author) {\n    return {\n        type: \"getObjBook\",\n        payload: Author\n    }\n}\n\nexport function UpdateBookFunction(bookId, bookName, bookDescription, bookDetail, listCat, authorLabel, img) {\n    var Token = localStorage.getItem('Token');\n    var authorasd;\n\n    if (authorLabel.current.state.value != null) {\n        var authorId = authorLabel.current.state.value.id;\n        authorasd = GetAuthorByIdForBook(authorId);\n    }\n\n    if (img.current.files.length > 0) {\n        var imageaaaa = img.current.files[0].name;\n    }\n    \n    var data = {name: bookName, description: bookDescription, detail : bookDetail, categories: listCat, author: authorasd, image: imageaaaa};\n    Axios.put('http://localhost:8080/books/' + bookId, JSON.stringify(data),{\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      },\n      })\n      .then(function (response) {\n        //alert(\"Update Working!\");\n        window.location = \"/book\";\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n}"]},"metadata":{},"sourceType":"module"}