{"ast":null,"code":"import Axios from 'axios';\nexport function ShowContact(linkProfile, author) {\n  var type = \"\";\n\n  if (author.current.state.value != null) {\n    type = author.current.state.value.label;\n  }\n\n  localStorage.setItem('linkProfile', linkProfile);\n  localStorage.setItem('type', type);\n  window.location = \"/cat\";\n}\n_c = ShowContact;\nexport function sendActionShowToRedux(listContact) {\n  return {\n    type: \"showContact\",\n    payload: listContact\n  };\n} // export function GetObjectContactById(id) {\n//     return async(dispatch) => {\n//         Axios.get('http://localhost:8080/contacts/' + id,  {\n//             method: 'GET',\n//             data: {},\n//             headers: {\n//                 \"Authorization\": Token,\n//                 'Content-Type': 'application/json'\n//             },\n//         })\n//             .then(function (responds) {\n//                 dispatch(sendActionGetObjectToRedux(responds.data));\n//             })\n//     }\n// }\n// export function sendActionGetObjectToRedux(contact) {\n//     return {\n//         type: \"getObjectContact\",\n//         payload: contact\n//     }\n// }\n\nexport function UpdateContactFunction(id, facebook1, youtube1, gmail1, address1, phone1) {\n  var Token = localStorage.getItem('Token');\n  var contactJson = {\n    facebook: facebook1,\n    youtube: youtube1,\n    gmail: gmail1,\n    phoneNumber: phone1,\n    address: address1\n  };\n  Axios.post('http://localhost:8080/contacts', JSON.stringify(contactJson), {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    //alert(\"update Working!\");\n    window.location = \"/contact\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c2 = UpdateContactFunction;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowContact\");\n$RefreshReg$(_c2, \"UpdateContactFunction\");","map":{"version":3,"sources":["/Users/macoc/Documents/FE_React/Book-Reviews-FrontEnd/src/redux/reduxContact.js"],"names":["Axios","ShowContact","linkProfile","author","type","current","state","value","label","localStorage","setItem","window","location","sendActionShowToRedux","listContact","payload","UpdateContactFunction","id","facebook1","youtube1","gmail1","address1","phone1","Token","getItem","contactJson","facebook","youtube","gmail","phoneNumber","address","post","JSON","stringify","headers","then","response","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqBC,WAArB,EAAkCC,MAAlC,EAA0C;AAC7C,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAID,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqBC,KAArB,IAA8B,IAAlC,EAAwC;AACrCH,IAAAA,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeC,KAAf,CAAqBC,KAArB,CAA2BC,KAAlC;AACF;;AAEDC,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCR,WAApC;AACAO,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,IAA7B;AACAO,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAlB;AACH;KATeX,W;AAWhB,OAAO,SAASY,qBAAT,CAA+BC,WAA/B,EAA4C;AAC/C,SAAO;AACHV,IAAAA,IAAI,EAAE,aADH;AAEHW,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,qBAAT,CAA+BC,EAA/B,EAAmCC,SAAnC,EAA8CC,QAA9C,EAAwDC,MAAxD,EAAgEC,QAAhE,EAA0EC,MAA1E,EAAkF;AACrF,MAAIC,KAAK,GAAGd,YAAY,CAACe,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIC,WAAW,GAAG;AAACC,IAAAA,QAAQ,EAAER,SAAX;AAAsBS,IAAAA,OAAO,EAAER,QAA/B;AAAyCS,IAAAA,KAAK,EAAER,MAAhD;AAAwDS,IAAAA,WAAW,EAAEP,MAArE;AAA6EQ,IAAAA,OAAO,EAAET;AAAtF,GAAlB;AACArB,EAAAA,KAAK,CAAC+B,IAAN,CAAW,gCAAX,EAA6CC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAA7C,EAAyE;AACvES,IAAAA,OAAO,EAAE;AACP,uBAAiBX,KADV;AAEP,sBAAgB;AAFT;AAD8D,GAAzE,EAMGY,IANH,CAMQ,UAAUC,QAAV,EAAoB;AACxB;AACAzB,IAAAA,MAAM,CAACC,QAAP,GAAkB,UAAlB;AACD,GATH,EAUGyB,KAVH,CAUS,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAZH;AAcH;MAjBetB,qB","sourcesContent":["import Axios from 'axios';\n\nexport function ShowContact(linkProfile, author) {\n    var type = \"\";\n    if (author.current.state.value != null) {\n       type = author.current.state.value.label;\n    }\n\n    localStorage.setItem('linkProfile', linkProfile);\n    localStorage.setItem('type', type);\n    window.location = \"/cat\";\n}\n\nexport function sendActionShowToRedux(listContact) {\n    return {\n        type: \"showContact\",\n        payload: listContact\n    }\n}\n\n// export function GetObjectContactById(id) {\n//     return async(dispatch) => {\n//         Axios.get('http://localhost:8080/contacts/' + id,  {\n//             method: 'GET',\n//             data: {},\n//             headers: {\n//                 \"Authorization\": Token,\n//                 'Content-Type': 'application/json'\n//             },\n//         })\n//             .then(function (responds) {\n//                 dispatch(sendActionGetObjectToRedux(responds.data));\n//             })\n//     }\n// }\n\n// export function sendActionGetObjectToRedux(contact) {\n//     return {\n//         type: \"getObjectContact\",\n//         payload: contact\n//     }\n// }\n\nexport function UpdateContactFunction(id, facebook1, youtube1, gmail1, address1, phone1) {\n    var Token = localStorage.getItem('Token');\n    var contactJson = {facebook: facebook1, youtube: youtube1, gmail: gmail1, phoneNumber: phone1, address: address1};\n    Axios.post('http://localhost:8080/contacts', JSON.stringify(contactJson),{\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      },\n      })\n      .then(function (response) {\n        //alert(\"update Working!\");\n        window.location = \"/contact\";\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n}"]},"metadata":{},"sourceType":"module"}