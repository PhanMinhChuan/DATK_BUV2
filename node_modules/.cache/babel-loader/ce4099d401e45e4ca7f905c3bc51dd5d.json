{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { Component, useEffect } from 'react';\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Link } from 'react-router-dom';\nimport { RiAddBoxFill } from \"react-icons/ri\";\nimport { BsFillSkipBackwardFill, BsFillSkipForwardFill } from \"react-icons/bs\";\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ShowComments, GetCommentSize, ChangeListCommentByPageIndex, delFunc } from '../redux/reduxComment.js';\nimport $ from 'jquery';\nexport function Comment() {\n  // $(document).ready(function(){\n  //   $(\".iconTasks\").css(\"background-color\", \"\");\n  //   $(\"#iconTasks6\").css(\"background-color\", \"rgba(0, 134, 60, 0.644)\");\n  //   $(\"#index1\").css(\"background-color\", \"rgb(13, 187, 85)\");\n  // });\n  // function changeColorBtn() {\n  //   setTimeout(function(){\n  //     $(\"#index1\").css(\"background-color\", \"\");\n  //   }, 100);\n  // }\n  // const dispatch = useDispatch(); \n  // let [comment, setComment] = useState({});\n  // useEffect(() => {\n  //   setComment(dispatch(ShowComments()));\n  // }, comment)\n  // const listCommentSelector = useSelector(state => state);\n  // const listComment = Array.from(listCommentSelector);\n  // function getComment() {\n  //   return (\n  //     listComment.map((item, index) => {\n  //       //item.user.usernameconsole.log(item.user.username);{item.user.username}{item.book.name}\n  //       //var arrUser = [];\n  //       //for (var i = 0; i < item.user.length; i++) {\n  //       //  \n  //       //}\n  //       //console.log(item.user.length);\n  //         var username = \"\";\n  //         var bookname = \"\";\n  //         if (item.book != null){\n  //           bookname = item.book.name;\n  //         }\n  //         if (item.user != null) {\n  //           username = item.user.username;\n  //         }\n  //         return (\n  //         <tr key={index}>\n  //           <td>{item.id}</td>\n  //           <td>{item.comment}</td>\n  //           <td>{bookname}</td>\n  //           <td>{username}</td>\n  //           <td>\n  //             <button class=\"deletedBtn\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?'))  delFunc(item.id) } }><AiFillDelete /></button>\n  //           </td>\n  //         </tr>\n  //       )\n  //     })\n  //   )\n  // }\n  // function paginationFunc() {\n  //   var arr = [];\n  //   var index = GetCommentSize();\n  //   var numberOfPages = Math.floor(index / 4);\n  //   for (var i = 1 ; i <= numberOfPages; i++) {\n  //     var index = i;\n  //     arr.push(i);\n  //   }\n  //   return (\n  //     arr.map((item, index) => {\n  //       var idStr = \"index\" + item;\n  //       return (\n  //         <button class=\"phanTrangBtn\" id={idStr} onClick={() => {dispatch(ChangeListCommentByPageIndex(item)); changeColorBtn()}}>{item}</button>\n  //       )\n  //     })\n  //   )\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/macoc/Documents/FE_React/Book-Reviews-FrontEnd/src/component/comment.js"],"names":["React","Component","useEffect","AiFillDelete","Link","RiAddBoxFill","BsFillSkipBackwardFill","BsFillSkipForwardFill","useState","useSelector","useDispatch","ShowComments","GetCommentSize","ChangeListCommentByPageIndex","delFunc","$","Comment"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,gBAA9D;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,4BAAtC,EAAoEC,OAApE,QAAkF,0BAAlF;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,qCADF;AAKD;KA9EeA,O;AAiFhB,eAAeA,OAAf","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Link } from 'react-router-dom';\nimport { RiAddBoxFill } from \"react-icons/ri\";\nimport { BsFillSkipBackwardFill, BsFillSkipForwardFill } from \"react-icons/bs\";\n\nimport {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {ShowComments, GetCommentSize, ChangeListCommentByPageIndex, delFunc} from '../redux/reduxComment.js';\nimport $ from 'jquery'; \n\nexport function Comment() {\n  // $(document).ready(function(){\n  //   $(\".iconTasks\").css(\"background-color\", \"\");\n  //   $(\"#iconTasks6\").css(\"background-color\", \"rgba(0, 134, 60, 0.644)\");\n  //   $(\"#index1\").css(\"background-color\", \"rgb(13, 187, 85)\");\n  // });\n\n  // function changeColorBtn() {\n  //   setTimeout(function(){\n  //     $(\"#index1\").css(\"background-color\", \"\");\n  //   }, 100);\n  // }\n\n  // const dispatch = useDispatch(); \n  // let [comment, setComment] = useState({});\n  // useEffect(() => {\n  //   setComment(dispatch(ShowComments()));\n  // }, comment)\n\n  // const listCommentSelector = useSelector(state => state);\n  // const listComment = Array.from(listCommentSelector);\n\n  // function getComment() {\n  //   return (\n  //     listComment.map((item, index) => {\n  //       //item.user.usernameconsole.log(item.user.username);{item.user.username}{item.book.name}\n  //       //var arrUser = [];\n  //       //for (var i = 0; i < item.user.length; i++) {\n  //       //  \n  //       //}\n  //       //console.log(item.user.length);\n  //         var username = \"\";\n  //         var bookname = \"\";\n  //         if (item.book != null){\n  //           bookname = item.book.name;\n  //         }\n  //         if (item.user != null) {\n  //           username = item.user.username;\n  //         }\n  //         return (\n  //         <tr key={index}>\n  //           <td>{item.id}</td>\n  //           <td>{item.comment}</td>\n  //           <td>{bookname}</td>\n  //           <td>{username}</td>\n  //           <td>\n  //             <button class=\"deletedBtn\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?'))  delFunc(item.id) } }><AiFillDelete /></button>\n  //           </td>\n  //         </tr>\n  //       )\n  //     })\n  //   )\n  // }\n\n  // function paginationFunc() {\n  //   var arr = [];\n  //   var index = GetCommentSize();\n  //   var numberOfPages = Math.floor(index / 4);\n  //   for (var i = 1 ; i <= numberOfPages; i++) {\n  //     var index = i;\n  //     arr.push(i);\n  //   }\n\n  //   return (\n  //     arr.map((item, index) => {\n  //       var idStr = \"index\" + item;\n  //       return (\n  //         <button class=\"phanTrangBtn\" id={idStr} onClick={() => {dispatch(ChangeListCommentByPageIndex(item)); changeColorBtn()}}>{item}</button>\n  //       )\n  //     })\n  //   )\n  // }\n\n  return (\n    <>\n      \n    </>\n  );  \n}\n\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}