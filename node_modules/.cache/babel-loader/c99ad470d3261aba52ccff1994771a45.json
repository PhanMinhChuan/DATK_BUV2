{"ast":null,"code":"// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n\n  var n = !isFinite(+number) ? 0 : +number,\n      prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n      sep = typeof thousands_sep === 'undefined' ? ',' : thousands_sep,\n      dec = typeof dec_point === 'undefined' ? '.' : dec_point,\n      s = '',\n      toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec);\n    return '' + Math.round(n * k) / k;\n  }; // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\n\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n\n  return s.join(dec);\n}\n\nfunction asdasdazxczxdasda() {\n  // Bar Chart Example\n  var ctx = document.getElementById(\"myBarChart\");\n  var myBarChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: [\"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\"],\n      datasets: [{\n        label: \"Count\",\n        backgroundColor: \"#4e73df\",\n        hoverBackgroundColor: \"#2e59d9\",\n        borderColor: \"#4e73df\",\n        data: [150, 68, 480, 72, 320]\n      }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      layout: {\n        padding: {\n          left: 10,\n          right: 25,\n          top: 25,\n          bottom: 0\n        }\n      },\n      scales: {\n        xAxes: [{\n          time: {\n            unit: 'month'\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            maxTicksLimit: 6\n          },\n          maxBarThickness: 25\n        }],\n        yAxes: [{\n          ticks: {\n            min: 0,\n            max: 500,\n            maxTicksLimit: 5,\n            padding: 10,\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return number_format(value);\n            }\n          },\n          gridLines: {\n            color: \"rgb(234, 236, 244)\",\n            zeroLineColor: \"rgb(234, 236, 244)\",\n            drawBorder: false,\n            borderDash: [2],\n            zeroLineBorderDash: [2]\n          }\n        }]\n      },\n      legend: {\n        display: false\n      },\n      tooltips: {\n        titleMarginBottom: 10,\n        titleFontColor: '#6e707e',\n        titleFontSize: 14,\n        backgroundColor: \"rgb(255,255,255)\",\n        bodyFontColor: \"#858796\",\n        borderColor: '#dddfeb',\n        borderWidth: 1,\n        xPadding: 15,\n        yPadding: 15,\n        displayColors: false,\n        caretPadding: 10,\n        callbacks: {\n          label: function (tooltipItem, chart) {\n            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n            return datasetLabel + number_format(tooltipItem.yLabel);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport default asdasdazxczxdasda;","map":{"version":3,"sources":["/Users/macoc/Documents/FE_React/Book-Reviews-FrontEnd/src/js/chart-bar-demo.js"],"names":["Chart","defaults","global","defaultFontFamily","defaultFontColor","number_format","number","decimals","dec_point","thousands_sep","replace","n","isFinite","prec","Math","abs","sep","dec","s","toFixedFix","k","pow","round","split","length","Array","join","asdasdazxczxdasda","ctx","document","getElementById","myBarChart","type","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","time","unit","gridLines","display","drawBorder","ticks","maxTicksLimit","maxBarThickness","yAxes","min","max","callback","value","index","values","color","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","titleMarginBottom","titleFontColor","titleFontSize","bodyFontColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","callbacks","tooltipItem","chart","datasetLabel","datasetIndex","yLabel"],"mappings":"AAAA;AACAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBC,iBAAtB,GAA0C,QAA1C,EAAoD,gGAApD;AACAH,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBE,gBAAtB,GAAyC,SAAzC;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,aAApD,EAAmE;AACjE;AACA;AACAH,EAAAA,MAAM,GAAG,CAACA,MAAM,GAAG,EAAV,EAAcI,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,EAA+BA,OAA/B,CAAuC,GAAvC,EAA4C,EAA5C,CAAT;;AACA,MAAIC,CAAC,GAAG,CAACC,QAAQ,CAAC,CAACN,MAAF,CAAT,GAAqB,CAArB,GAAyB,CAACA,MAAlC;AAAA,MACEO,IAAI,GAAG,CAACD,QAAQ,CAAC,CAACL,QAAF,CAAT,GAAuB,CAAvB,GAA2BO,IAAI,CAACC,GAAL,CAASR,QAAT,CADpC;AAAA,MAEES,GAAG,GAAI,OAAOP,aAAP,KAAyB,WAA1B,GAAyC,GAAzC,GAA+CA,aAFvD;AAAA,MAGEQ,GAAG,GAAI,OAAOT,SAAP,KAAqB,WAAtB,GAAqC,GAArC,GAA2CA,SAHnD;AAAA,MAIEU,CAAC,GAAG,EAJN;AAAA,MAKEC,UAAU,GAAG,UAASR,CAAT,EAAYE,IAAZ,EAAkB;AAC7B,QAAIO,CAAC,GAAGN,IAAI,CAACO,GAAL,CAAS,EAAT,EAAaR,IAAb,CAAR;AACA,WAAO,KAAKC,IAAI,CAACQ,KAAL,CAAWX,CAAC,GAAGS,CAAf,IAAoBA,CAAhC;AACD,GARH,CAJiE,CAajE;;;AACAF,EAAAA,CAAC,GAAG,CAACL,IAAI,GAAGM,UAAU,CAACR,CAAD,EAAIE,IAAJ,CAAb,GAAyB,KAAKC,IAAI,CAACQ,KAAL,CAAWX,CAAX,CAAnC,EAAkDY,KAAlD,CAAwD,GAAxD,CAAJ;;AACA,MAAIL,CAAC,CAAC,CAAD,CAAD,CAAKM,MAAL,GAAc,CAAlB,EAAqB;AACnBN,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,CAAKR,OAAL,CAAa,yBAAb,EAAwCM,GAAxC,CAAP;AACD;;AACD,MAAI,CAACE,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,EAAaM,MAAb,GAAsBX,IAA1B,EAAgC;AAC9BK,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAf;AACAA,IAAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,IAAIO,KAAJ,CAAUZ,IAAI,GAAGK,CAAC,CAAC,CAAD,CAAD,CAAKM,MAAZ,GAAqB,CAA/B,EAAkCE,IAAlC,CAAuC,GAAvC,CAAR;AACD;;AACD,SAAOR,CAAC,CAACQ,IAAF,CAAOT,GAAP,CAAP;AACD;;AAED,SAASU,iBAAT,GAA6B;AAC3B;AACA,MAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAV;AACA,MAAIC,UAAU,GAAG,IAAI/B,KAAJ,CAAU4B,GAAV,EAAe;AAC9BI,IAAAA,IAAI,EAAE,KADwB;AAE9BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,iBAApB,EAAuC,iBAAvC,EAA0D,iBAA1D,EAA6E,iBAA7E,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,OADE;AAETC,QAAAA,eAAe,EAAE,SAFR;AAGTC,QAAAA,oBAAoB,EAAE,SAHb;AAITC,QAAAA,WAAW,EAAE,SAJJ;AAKTN,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB;AALG,OAAD;AAFN,KAFwB;AAY9BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,mBAAmB,EAAE,KADd;AAEPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,KAAK,EAAE,EAFA;AAGPC,UAAAA,GAAG,EAAE,EAHE;AAIPC,UAAAA,MAAM,EAAE;AAJD;AADH,OAFD;AAUPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF,WADA;AAINC,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE,KADA;AAETC,YAAAA,UAAU,EAAE;AAFH,WAJL;AAQNC,UAAAA,KAAK,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV,WARD;AAWNC,UAAAA,eAAe,EAAE;AAXX,SAAD,CADD;AAcNC,QAAAA,KAAK,EAAE,CAAC;AACNH,UAAAA,KAAK,EAAE;AACLI,YAAAA,GAAG,EAAE,CADA;AAELC,YAAAA,GAAG,EAAE,GAFA;AAGLJ,YAAAA,aAAa,EAAE,CAHV;AAILb,YAAAA,OAAO,EAAE,EAJJ;AAKL;AACAkB,YAAAA,QAAQ,EAAE,UAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AACvC,qBAAO3D,aAAa,CAACyD,KAAD,CAApB;AACD;AARI,WADD;AAWNV,UAAAA,SAAS,EAAE;AACTa,YAAAA,KAAK,EAAE,oBADE;AAETC,YAAAA,aAAa,EAAE,oBAFN;AAGTZ,YAAAA,UAAU,EAAE,KAHH;AAITa,YAAAA,UAAU,EAAE,CAAC,CAAD,CAJH;AAKTC,YAAAA,kBAAkB,EAAE,CAAC,CAAD;AALX;AAXL,SAAD;AAdD,OAVD;AA4CPC,MAAAA,MAAM,EAAE;AACNhB,QAAAA,OAAO,EAAE;AADH,OA5CD;AA+CPiB,MAAAA,QAAQ,EAAE;AACRC,QAAAA,iBAAiB,EAAE,EADX;AAERC,QAAAA,cAAc,EAAE,SAFR;AAGRC,QAAAA,aAAa,EAAE,EAHP;AAIRpC,QAAAA,eAAe,EAAE,kBAJT;AAKRqC,QAAAA,aAAa,EAAE,SALP;AAMRnC,QAAAA,WAAW,EAAE,SANL;AAORoC,QAAAA,WAAW,EAAE,CAPL;AAQRC,QAAAA,QAAQ,EAAE,EARF;AASRC,QAAAA,QAAQ,EAAE,EATF;AAURC,QAAAA,aAAa,EAAE,KAVP;AAWRC,QAAAA,YAAY,EAAE,EAXN;AAYRC,QAAAA,SAAS,EAAE;AACT5C,UAAAA,KAAK,EAAE,UAAS6C,WAAT,EAAsBC,KAAtB,EAA6B;AAClC,gBAAIC,YAAY,GAAGD,KAAK,CAAC/C,QAAN,CAAe8C,WAAW,CAACG,YAA3B,EAAyChD,KAAzC,IAAkD,EAArE;AACA,mBAAO+C,YAAY,GAAG9E,aAAa,CAAC4E,WAAW,CAACI,MAAb,CAAnC;AACD;AAJQ;AAZH;AA/CH;AAZqB,GAAf,CAAjB;AAgFD;;AAED,eAAe1D,iBAAf","sourcesContent":["// Set new default font family and font color to mimic Bootstrap's default styling\nChart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\nChart.defaults.global.defaultFontColor = '#858796';\n\nfunction number_format(number, decimals, dec_point, thousands_sep) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + '').replace(',', '').replace(' ', '');\n  var n = !isFinite(+number) ? 0 : +number,\n    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n    s = '',\n    toFixedFix = function(n, prec) {\n      var k = Math.pow(10, prec);\n      return '' + Math.round(n * k) / k;\n    };\n  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n  return s.join(dec);\n}\n\nfunction asdasdazxczxdasda() {\n  // Bar Chart Example\n  var ctx = document.getElementById(\"myBarChart\");\n  var myBarChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: [\"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\", \"30-01-2022 9:42\"],\n      datasets: [{\n        label: \"Count\",\n        backgroundColor: \"#4e73df\",\n        hoverBackgroundColor: \"#2e59d9\",\n        borderColor: \"#4e73df\",\n        data: [150, 68, 480, 72, 320],\n      }],\n    },\n    options: {\n      maintainAspectRatio: false,\n      layout: {\n        padding: {\n          left: 10,\n          right: 25,\n          top: 25,\n          bottom: 0\n        }\n      },\n      scales: {\n        xAxes: [{\n          time: {\n            unit: 'month'\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            maxTicksLimit: 6\n          },\n          maxBarThickness: 25,\n        }],\n        yAxes: [{\n          ticks: {\n            min: 0,\n            max: 500,\n            maxTicksLimit: 5,\n            padding: 10,\n            // Include a dollar sign in the ticks\n            callback: function(value, index, values) {\n              return number_format(value);\n            }\n          },\n          gridLines: {\n            color: \"rgb(234, 236, 244)\",\n            zeroLineColor: \"rgb(234, 236, 244)\",\n            drawBorder: false,\n            borderDash: [2],\n            zeroLineBorderDash: [2]\n          }\n        }],\n      },\n      legend: {\n        display: false\n      },\n      tooltips: {\n        titleMarginBottom: 10,\n        titleFontColor: '#6e707e',\n        titleFontSize: 14,\n        backgroundColor: \"rgb(255,255,255)\",\n        bodyFontColor: \"#858796\",\n        borderColor: '#dddfeb',\n        borderWidth: 1,\n        xPadding: 15,\n        yPadding: 15,\n        displayColors: false,\n        caretPadding: 10,\n        callbacks: {\n          label: function(tooltipItem, chart) {\n            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n            return datasetLabel + number_format(tooltipItem.yLabel);\n          }\n        }\n      },\n    }\n  });\n}\n\nexport default asdasdazxczxdasda;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}