{"ast":null,"code":"import Axios from 'axios';\nexport function ShowAuthors() {\n  var Token = localStorage.getItem('Token');\n  return async dispatch => {\n    Axios.get('http://localhost:8080/authors', {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(sendActionShowToRedux(responds.data));\n    });\n  };\n}\n_c = ShowAuthors;\nexport function sendActionShowToRedux(listUser) {\n  return {\n    type: \"showAuthor\",\n    payload: listUser\n  };\n}\nexport function GetAuthorSize() {\n  var Token = localStorage.getItem('Token');\n  var index = 0;\n  var data = {};\n  var config = {\n    method: 'PUT',\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  };\n  Axios.put('http://localhost:8080/authors', data, config).then(function (responds) {\n    localStorage.setItem('authorSize', responds.data.length);\n  });\n  index = localStorage.getItem('authorSize');\n  return index;\n}\n_c2 = GetAuthorSize;\nexport function ChangeListAuthorByPageIndex(id) {\n  var Token = localStorage.getItem('Token');\n  return async dispatch => {\n    Axios.get('http://localhost:8080/authors?page=' + (id - 1) + '&size=7', {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(loadListAuthorByPageIndex(responds.data));\n    });\n  };\n}\n_c3 = ChangeListAuthorByPageIndex;\nexport function loadListAuthorByPageIndex(listAuthor) {\n  return {\n    type: 'changeListAuthorByIndex',\n    payload: listAuthor\n  };\n}\nexport function GetAuthorListFromDB() {\n  var Token = localStorage.getItem('Token');\n  var data = {};\n  var AuthorNameList = [];\n  var config = {\n    method: 'PUT',\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  };\n  Axios.put('http://localhost:8080/authors', data, config).then(function (responds) {\n    for (var i = 0; i <= responds.data.length; i++) {\n      if (responds.data[i] != null) {\n        AuthorNameList.push({\n          label: responds.data[i].name,\n          id: responds.data[i].id\n        });\n      }\n    }\n\n    localStorage.setItem('authorList', JSON.stringify(AuthorNameList));\n  });\n  const jsonAuthorNameList = localStorage.getItem('authorList');\n  const getAuthorNameList = JSON.parse(jsonAuthorNameList);\n  return getAuthorNameList;\n}\n_c4 = GetAuthorListFromDB;\nexport function AddAuthorFunc(authorName, birthDay, sex, listCat) {\n  var Token = localStorage.getItem('Token');\n  var data = {\n    name: authorName,\n    birth: birthDay,\n    sex: sex,\n    categories: listCat\n  };\n  Axios.post('http://localhost:8080/authors', JSON.stringify(data), {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    alert(\"add Working!\");\n    window.location = \"/author\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c5 = AddAuthorFunc;\nexport function DeletedAuthorFunc(id) {\n  var Token = localStorage.getItem('Token');\n  Axios.delete('http://localhost:8080/authors/' + id, {\n    headers: {\n      \"Authorization\": Token\n    }\n  }).then(function (response) {\n    //alert(\"delete Working!\"); \n    window.location = \"/author\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c6 = DeletedAuthorFunc;\nexport function GetAuthorById(id) {\n  var Token = localStorage.getItem('Token');\n  return async dispatch => {\n    Axios.get('http://localhost:8080/authors/' + id, {\n      method: 'GET',\n      data: {},\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (responds) {\n      dispatch(sendActionShowAuthorToRedux(responds.data));\n    });\n  };\n}\n_c7 = GetAuthorById;\nexport function sendActionShowAuthorToRedux(Author) {\n  return {\n    type: \"getObjAuthor\",\n    payload: Author\n  };\n}\nexport function GetAuthorByIdForBook(id) {\n  var Token = localStorage.getItem('Token');\n  Axios.get('http://localhost:8080/authors/' + id, {\n    method: 'GET',\n    data: {},\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (responds) {\n    localStorage.setItem('authorForBook', JSON.stringify(responds.data));\n  });\n  const jsonAuthor = localStorage.getItem('authorForBook');\n  const getAuthor = JSON.parse(jsonAuthor);\n  return getAuthor;\n}\n_c8 = GetAuthorByIdForBook;\nexport function UpdateAuthorFunc(id, authorName, birthDay, sex, listCat) {\n  var Token = localStorage.getItem('Token');\n  var data = {\n    name: authorName,\n    birth: birthDay,\n    sex: sex,\n    categories: listCat\n  };\n  Axios.put('http://localhost:8080/authors/' + id, JSON.stringify(data), {\n    headers: {\n      \"Authorization\": Token,\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    window.location = \"/author\";\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n_c9 = UpdateAuthorFunc;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"ShowAuthors\");\n$RefreshReg$(_c2, \"GetAuthorSize\");\n$RefreshReg$(_c3, \"ChangeListAuthorByPageIndex\");\n$RefreshReg$(_c4, \"GetAuthorListFromDB\");\n$RefreshReg$(_c5, \"AddAuthorFunc\");\n$RefreshReg$(_c6, \"DeletedAuthorFunc\");\n$RefreshReg$(_c7, \"GetAuthorById\");\n$RefreshReg$(_c8, \"GetAuthorByIdForBook\");\n$RefreshReg$(_c9, \"UpdateAuthorFunc\");","map":{"version":3,"sources":["/Users/macoc/Documents/FE_React/Book-Reviews-FrontEnd/src/redux/reduxAuthor.js"],"names":["Axios","ShowAuthors","Token","localStorage","getItem","dispatch","get","method","data","headers","then","responds","sendActionShowToRedux","listUser","type","payload","GetAuthorSize","index","config","put","setItem","length","ChangeListAuthorByPageIndex","id","loadListAuthorByPageIndex","listAuthor","GetAuthorListFromDB","AuthorNameList","i","push","label","name","JSON","stringify","jsonAuthorNameList","getAuthorNameList","parse","AddAuthorFunc","authorName","birthDay","sex","listCat","birth","categories","post","response","alert","window","location","catch","error","console","log","DeletedAuthorFunc","delete","GetAuthorById","sendActionShowAuthorToRedux","Author","GetAuthorByIdForBook","jsonAuthor","getAuthor","UpdateAuthorFunc"],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nexport function ShowAuthors() {\n    var Token = localStorage.getItem('Token');\n    return async(dispatch) => {\n        Axios.get('http://localhost:8080/authors',  {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(sendActionShowToRedux(responds.data));\n            })\n    }\n}\n\nexport function sendActionShowToRedux(listUser) {\n    return {\n        type: \"showAuthor\",\n        payload: listUser\n    }\n}\n\nexport function GetAuthorSize() {\n    var Token = localStorage.getItem('Token');\n    var index = 0;\n        var data = {};\n        var config = {\n            method: 'PUT',\n            headers: {\n            \"Authorization\": Token,\n            'Content-Type': 'application/json'\n            }\n        }\n        Axios.put('http://localhost:8080/authors', data, config)\n        .then(function (responds) {\n            localStorage.setItem('authorSize', responds.data.length);\n        })  \n        \n    index = localStorage.getItem('authorSize');\n    return index;\n}\n\nexport function ChangeListAuthorByPageIndex(id) {\n    var Token = localStorage.getItem('Token');\n    return async(dispatch) => {\n        Axios.get('http://localhost:8080/authors?page=' + (id-1)+ '&size=7', {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(loadListAuthorByPageIndex(responds.data));\n            })\n    }\n}\n\nexport function loadListAuthorByPageIndex(listAuthor) {\n    return {\n        type: 'changeListAuthorByIndex',\n        payload: listAuthor\n    }\n}\n\nexport function GetAuthorListFromDB() {\n    var Token = localStorage.getItem('Token');\n    var data = {};\n    var AuthorNameList = [];\n    var config = {\n        method: 'PUT', \n        headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n        }\n    }\n    Axios.put('http://localhost:8080/authors', data, config)\n    .then(function (responds) {\n        for (var i = 0; i <= responds.data.length; i++) {\n            if (responds.data[i] != null) {\n                AuthorNameList.push({label: responds.data[i].name, id: responds.data[i].id});\n            }\n        }\n        localStorage.setItem('authorList', JSON.stringify(AuthorNameList));\n    }) \n\n    const jsonAuthorNameList = localStorage.getItem('authorList');\n    const getAuthorNameList = JSON.parse(jsonAuthorNameList);\n    return getAuthorNameList;\n}\n\nexport function AddAuthorFunc(authorName, birthDay, sex, listCat) {\n    var Token = localStorage.getItem('Token');\n    var data = {name: authorName, birth: birthDay, sex: sex, categories: listCat};\n    Axios.post('http://localhost:8080/authors', JSON.stringify(data),{\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      },\n      })\n      .then(function (response) {\n        alert(\"add Working!\");\n        window.location = \"/author\";\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n}\n\nexport function DeletedAuthorFunc(id) {\n    var Token = localStorage.getItem('Token');\n    Axios.delete('http://localhost:8080/authors/' + id, {\n      headers: {\n        \"Authorization\": Token,\n      },\n    })\n    .then(function (response) {\n      //alert(\"delete Working!\"); \n      window.location = \"/author\";\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n}\n\nexport function GetAuthorById(id) {\n    var Token = localStorage.getItem('Token');\n    return async(dispatch) => {\n        Axios.get('http://localhost:8080/authors/' + id,  {\n            method: 'GET',\n            data: {},\n            headers: {\n                \"Authorization\": Token,\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(function (responds) {\n                dispatch(sendActionShowAuthorToRedux(responds.data));\n            })\n    }\n}\n\nexport function sendActionShowAuthorToRedux(Author) {\n    return {\n        type: \"getObjAuthor\",\n        payload: Author\n    }\n}\n\nexport function GetAuthorByIdForBook(id) {\n    var Token = localStorage.getItem('Token');\n    Axios.get('http://localhost:8080/authors/' + id,  {\n        method: 'GET',\n        data: {},\n        headers: {\n            \"Authorization\": Token,\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (responds) {\n            localStorage.setItem('authorForBook', JSON.stringify(responds.data));\n        })\n    const jsonAuthor = localStorage.getItem('authorForBook');\n    const getAuthor = JSON.parse(jsonAuthor);\n    return getAuthor;\n}\n\nexport function UpdateAuthorFunc(id, authorName, birthDay, sex, listCat) {\n    var Token = localStorage.getItem('Token');\n    var data = {name: authorName, birth: birthDay, sex: sex, categories: listCat};\n    Axios.put('http://localhost:8080/authors/' + id, JSON.stringify(data),{\n      headers: {\n        \"Authorization\": Token,\n        'Content-Type': 'application/json'\n      },\n      })\n      .then(function (response) {\n        window.location = \"/author\";\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n}\n"]},"metadata":{},"sourceType":"module"}